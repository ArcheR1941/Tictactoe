import random

class TicTacToe:
    def __init__(self):
        self.board = [[' ' for _ in range(3)] for _ in range(3)]
        self.current_player = random.choice(['X', 'O'])

    def is_valid_move(self, move):
        row, col = move
        return self.board[row][col] == ' '

    def make_move(self, move):
        row, col = move
        self.board[row][col] = self.current_player
        self.switch_player()

    def switch_player(self):
        if self.current_player == 'X':
            self.current_player = 'O'
        else:
            self.current_player = 'X'

    def is_board_full(self):
        return all(all(cell != ' ' for cell in row) for row in self.board)

    def check_winner(self):
        for row in self.board:
            if row[0] == row[1] == row[2] != ' ':
                return row[0]
        for col in range(3):
            if self.board[0][col] == self.board[1][col] == self.board[2][col] != ' ':
                return self.board[0][col]
        if self.board[0][0] == self.board[1][1] == self.board[2][2] != ' ':
            return self.board[0][0]
        if self.board[0][2] == self.board[1][1] == self.board[2][0] != ' ':
            return self.board[0][2]
        if self.is_board_full():
            return 'C'  # for a draw
        return None

def main():
    game = TicTacToe()
    while True:
        game.display_board()
        print(f"Player {game.current_player}'s turn")
        row = int(input("Enter row (0-2): "))
        col = int(input("Enter col (0-2): "))
        move = (row, col)
        if game.is_valid_move(move):
            game.make_move(move)
            winner = game.check_winner()
            if winner is not None:
                game.display_board()
                if winner == 'C':
                    print("It's a draw!")
                else:
                    print(f"Player {winner} wins!")
                break
        else:
            print("Invalid move. Try again.")

if __name__ == "__main__":
    main()
